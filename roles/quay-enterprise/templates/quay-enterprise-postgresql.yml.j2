apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: "{{ quay_enterprise_app }}"
    quay-enterprise-component: "{{ quay_enterprise_postgresql_component }}"
  name: "{{ quay_enterprise_postgresql_component }}"
  namespace: "{{ quay_enterprise_namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:  
      app: "{{ quay_enterprise_app }}"
      quay-enterprise-component: "{{ quay_enterprise_postgresql_component }}"
  template:
    metadata:
      labels:
        app: "{{ quay_enterprise_app }}"
        quay-enterprise-component: "{{ quay_enterprise_postgresql_component }}"
    spec:
      containers:
      - name: postgres
        image: "{{ quay_enterprise_postgresql_image }}"
        env:
        - name: POSTGRESQL_USER
          value: "{{ quay_enterprise_postgresql_user }}"
        - name: POSTGRESQL_PASSWORD
          value: "{{ quay_enterprise_postgresql_password }}"
        - name: POSTGRESQL_DATABASE
          value: "{{ quay_enterprise_postgresql_database }}" 
        - name: POSTGRESQL_ADMIN_PASSWORD
          value: "{{ quay_enterprise_postgresql_admin_password }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          protocol: TCP
        resources: {}
        readinessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 5
          exec:
            command:
            - "/bin/sh"
            - "-i"
            - "-c"
            - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
        livenessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 30
          tcpSocket:
            port: 5432
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: postgres-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: "{{ quay_enterprise_postgresql_claim_name }}"
